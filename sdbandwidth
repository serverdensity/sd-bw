#!/usr/bin/env python

"""CLI for checking bandwidth at Server Density.

Usage: 
	sdbw groups (update | view)
	sdbw devices (update | view)
	sdbw bandwidth (group <name> | -g <name>) [(-t <start> <end>)]
	sdbw bandwidth (device <name> | -d <id>) [(-t <start> <end>)]
	sdbw time (set (<start> <end>) | view)
	sdbw -h | --help
	sdbw -v | --version

Options:
	-d <id>  		Use this device id to check bandwidth
	-g <name>		Use this group name to check bandwidth
	-t <start> <end>  	Use this time and update time in config: YYYY-MM-DDTHH:MM:SSZ
	-v, --version  		Show version
	-h, --help  		Show help
"""

# view and update devices. delete interfaces. 

# 	Future version
# 	sdbandwidth emailme <email>

import docopt
import bandwidth

if __name__ == '__main__':
	args = docopt.docopt(__doc__, version='SDbandwidth client 0.1')
	bandwidth.check_existing_apikey()

	if args['devices']:
		if args['update']:
			bandwidth.update_devices()
		elif args['view']:
			bandwidth.print_devices()
	elif args['groups']:
		if args['update']:
			bandwidth.update_groups()
		elif args['view']:
			bandwidth.print_groups()
	elif args['bandwidth']:
		clargs = {}
		if args['-t']:
			clargs['start'] = args['<start>']
			clargs['end'] = args['<end>']
		if args['-d']:
			clargs['id'] = args['<id>']
		if args['group']:
			bandwidth.print_bandwidth_group(args['<name>'], **clargs)
		elif args['device']:
			bandwidth.print_bandwidth_device(args['<name>'], **clargs)
	elif args['emailme']:
		# check that email is correct. 
		print "Not yet implemented!"
	elif args['config']:
		pass
	
