#!/usr/bin/env python

"""CLI for checking bandwidth at Server Density.

Usage: 
	sdbandwidth bandwidth [(-d <id>) (-t [(<start> <end>)])]
	sdbandwidth bandwidth group <name>
	sdbandwidth bandwidth device <name>
	sdbandwidth emailme <email>
	sdbandwidth groups (update | view)
	sdbandwidth devices (update | view)
	sdbandwidth config
	sdbandwidth -h | --help
	sdbandwidth -v | --version

Options:
	-d <id>  		Use this device instead of current device in config
	-t <start> <end>  	Use this time instead of time in config: YYYY-MM-DDTHH:MM:SSZ
	-v, --version  		Show version
	-h, --help  		Show help
"""

# view and update devices. delete interfaces. 

import docopt
import bandwidth

if __name__ == '__main__':
	args = docopt.docopt(__doc__, version='SDbandwidth client 0.1')

	if args['devices']:
		if args['update']:
			bandwidth.update_devices()
		elif args['view']:
			bandwidth.print_devices()
	elif args['bandwidth']:
		clargs = {}
		if args['-t']:
			clargs['start'] = args['<start>']
			clargs['end'] = args['<end>']
		if args['-d']:
			clargs['id'] = args['<id>']
		if args['group']:
			bandwidth.print_bandwidth_group(args['<name>'], **clargs)
		elif args['device']:
			bandwidth.print_bandwidth_device(args['<name>'], **clargs)
		# pass clargs into function. 
	elif args['emailme']:
		# check that email is correct. 
		pass
	elif args['config']:
		pass
	elif args['groups']:
		if args['update']:
			bandwidth.update_groups()
		elif args['view']:
			bandwidth.print_groups()
